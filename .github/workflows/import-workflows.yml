name: Deploy n8n Workflows

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  import:
    runs-on: ubuntu-latest
    env:
      N8N_API_URL:           ${{ secrets.N8N_API_URL }}
      N8N_BASIC_AUTH_USER:   ${{ secrets.N8N_BASIC_AUTH_USER }}
      N8N_BASIC_AUTH_PASSWORD: ${{ secrets.N8N_BASIC_AUTH_PASSWORD }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install n8n CLI (v1.84.3)
        run: npm install -g n8n@1.84.3

      - name: Check n8n API health
        run: |
          echo "🔗 Pinging n8n at $N8N_API_URL/"
          HTTP_STATUS=$(
            curl -u "$N8N_BASIC_AUTH_USER:$N8N_BASIC_AUTH_PASSWORD" \
                 -s -o /dev/null -w "%{http_code}" \
                 "$N8N_API_URL/"
          )
          echo "– HTTP status: $HTTP_STATUS"
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "❌ n8n returned HTTP $HTTP_STATUS" >&2
            exit 1
          fi

      - name: Lint workflows JSON
        run: |
          echo "🔍 Validating workflows.ndjson"
          jq -s . workflows.ndjson > /dev/null
          
      - name: Import workflows via HTTP API
        run: |
          echo "🚀 Importing workflows.ndjson into $N8N_API_URL via REST"
          while IFS= read -r wf; do
            name=$(echo "$wf" | jq -r .name)
            echo "👉 Importing workflow: $name"
            HTTP_STATUS=$(
              curl -u "$N8N_BASIC_AUTH_USER:$N8N_BASIC_AUTH_PASSWORD" \
                   -s -o /dev/null -w "%{http_code}" \
                   -H "Content-Type: application/json" \
                   -X POST "$N8N_API_URL/api/v1/workflows" \
                   -d "$wf"
            )
            if [ "$HTTP_STATUS" -ge 200 ] && [ "$HTTP_STATUS" -lt 300 ]; then
              echo "✅   OK (HTTP $HTTP_STATUS)"
            else
              echo "❌   Failed importing '$name' (HTTP $HTTP_STATUS)" >&2
              exit 1
            fi
          done < workflows.ndjson

      
